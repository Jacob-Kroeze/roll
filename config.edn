{:roll/repl {:port 3311}
 
 
 ;; Webserver
 
 :roll/httpkit
 {
  :port 5000
  ;; :handler  my.project/handler
  
  ;; -- default --
  ;;    :port  5000
  ;; :handler  #ig/ref :roll/handler
  }
 
 
 ;; File watching
 
 :roll/paths
 [ ;; reload changed config keys when this file changes
  ["config.edn"
   {:watch roll.core/reload
    :throttle 200}]

  ;; reload clojure code
  ["src/clj"
   "src/cljc"
   ,,, ;; add more paths as needed
   {:watch roll.paths/reload-clj
    ;; -or- a more aggresive reloading of REPL state
    ;; :watch  roll.paths/refresh-clj
    ;; -or- load clojure files directly
    ;; :watch  roll.paths/load-clj
    
    :throttle 200}]]
 }



;; Other available components
;;
(comment

  ;; Ring handler
  ;;
  
  :roll/handler
  {
   ;; :middleware  my.project/middleware -or- [ring-middleware ...]
   ;;  :not-found  my.project/not-found-handler
   ;;     :routes  [["/some/route" my.project/handler]]
   ;;      :sente  #ig/ref :roll/sente
   ;; - or -
   ;;    :handler  my.project/handler

  
   ;; -- default --
   ;;    :handler  roll.handler/default-handler
   ;; :middleware  roll.handler/default-middleware
   }



  ;; Websockets
  ;;
  
  :roll/sente
  {
   ;;           :handler  my.project/event-msg-handler
   ;; :handshake-data-fn  my.project/handshake-fn
   ;;              :path "/chsk"
   ;;
   ;; Transit read/write handlers
   ;; :packer
   ;;  {:write-handlers [datascript.transit/write-handlers ...]
   ;;   :read-handlers  [datascript.transit/read-handlers ...] }
   ;;
  
   ;; -- default --
   ;; :handler roll.sente/event-msg-handler
   }


  ;; Logging
  ;; https://github.com/ptaoussanis/timbre#configuration
  
  :roll/timbre
  {:level :debug
   :appenders {:println {:min-level :error}
               :spit {:fname "timbre.log"}}}
  

  
  ;; Task Scheduling
  ;;
  
  :roll/schedule
  [ ;; every 2 minutes
   [2 :m my.project/some-task-fn]
   
   ;; every week
   [1 :w my.project/some-other-task-fn]
   
   ;; multiple fns, and passing arguments
   [1 :h
    my.project/some-fn
    my.project/another-fn
    [my.project/yet-another-fn arg1 arg2 ,,,]]
   

   ;; possible periods
   ;; :ms / :s / :m / :h / :d / :w / :mt / :y

   ;; task fns can also return a core.async channel that can be closed
   ;; or will auto-close on task completion
   ]

  
  :roll/run ["<some shell command to run>" ,,,]


  
  ;; Frontend Reloading
  ;; make sure to include reload.js in your html page
  ;; https://raw.githubusercontent.com/dimovich/reload/master/release/reload.js
  
  :roll/reload {:css ["resources/public/css" ,,,]
                :page ["resources/public/jade" ,,,]}

  
  ;;
  ;; You can easily add your own config keys.  Check Integrant docs at
  ;; https://github.com/weavejester/integrant
  ;;
  
  )
