{
 :roll/repl {:port 3311}

 ;; Paths watching
 :roll/paths
 [
  ["src/clj"
   "src/cljc"
   ,,, ;; add more paths as needed

   ;; reload clojure code
   {:watch roll.paths/reload-clj
    ;; -or- a more aggresive reloading of REPL state
    ;; :watch  roll.paths/refresh-clj
    ;; -or- load clojure files directly
    ;; :watch  roll.paths/load-clj
    
    :throttle 200}]

  ["config.edn"
   ;; reload changed config keys when this file changes
   {:watch roll.core/reload
    :throttle 200}]]

 
 ;; Webserver (for alternatives see below)
 :roll/aleph
 {
  :port 5000
  ;; :handler  my.project/handler
  
  ;; -- default --
  ;;    :port  5000
  ;; :handler  #ig/ref :roll/handler
  }
 }



;; Other available components
;;
(comment

  ;; Ring handler  
  :roll/handler
  {
   ;; :middleware  my.project/middleware -or- [ring-middleware ...]
   ;;  :not-found  my.project/not-found-handler
   ;;     :routes  [["/some/route" my.project/handler]]
   ;;      :sente  #ig/ref :roll/sente
   ;; - or -
   ;;    :handler  my.project/handler

  
   ;; -- default --
   ;;    :handler  roll.handler/default-handler
   ;; :middleware  roll.handler/default-middleware
   }


  
  ;; Nginx Webserver (make sure to add nginx-clojure dependency)
  :roll/nginx
  {
   :config "my-nginx.conf"
   ;; -or-
   ;;    :port  <port number>
   ;; :handler  my.project/handler
  
   ;; -- default --
   ;;    :port  5000
   ;; :handler  #ig/ref :roll/handler
   }

  
  
  ;; Http-kit Webserver (make sure to add httpkit dependency)
  :roll/httpkit
  {
   :port 5000
   ;; other opts similar to :roll/aleph
   ,,,}


  ;; Websockets
  :roll/sente
  {
   ;;           :handler  my.project/event-msg-handler
   ;; :handshake-data-fn  my.project/handshake-fn
   ;;              :path "/chsk"
   ;;
   ;; Transit read/write handlers
   ;; :packer
   ;;  {:write-handlers [datascript.transit/write-handlers ...]
   ;;   :read-handlers  [datascript.transit/read-handlers ...] }
   ;;
  
   ;; -- default --
   ;; :handler roll.sente/event-msg-handler
   }


  ;; Task Scheduling
  
  :roll/schedule [ ;; every 2 minutes
                  [2 :m my.project/some-task-fn]
                  ;; every week
                  [1 :w my.project/some-other-task-fn]

                  ;; possible periods
                  ;; :ms / :s / :m / :h / :d / :w / :mn / :y
                  ]


  
  :roll/run ["<some shell command to run>" ,,,]


  
  ;; Frontend Reloading
  ;; make sure to include reload.js in your html page
  ;; https://raw.githubusercontent.com/dimovich/reload/master/release/reload.js
 
  :roll/reload {:css ["resources/public/css" ,,,]
                :page ["resources/public/jade" ,,,]}

  
  ;;
  ;; You can easily add your own config keys.  Check Integrant docs at
  ;; https://github.com/weavejester/integrant
  ;;
  
  )
